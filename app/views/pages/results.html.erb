<div class="background" style="background-image: linear-gradient(rgba(0,0,0,.5), rgba(0,0,0,.5)), url(<%=@photo['urls']['full']%>);">
</div>

<!-- MENU SECTION  -->
<div class="menu-container" onclick="openMenu()">
  <div class="bar1" style="background-color: <%=@photo['color']%>"></div>
  <div class="bar2" style="background-color: <%=@photo['color']%>"></div>
  <div class="bar3" style="background-color: <%=@photo['color']%>"></div>

  <div id="menu-content" class="menu-dropdown" style="background-color: <%=@photo['color']%>">
    <div onclick="openOverlay1()">About</div>
    <% if !session[:id] %>
      <div onclick="openOverlay2()">Signup</div>
      <div onclick="">Spotify Authentication</div>
    <% else %>
      <%= link_to "Profile", "/profile" %>
      <%= link_to "Logout", logout_path, method: :post %>
    <% end %>
  </div>
</div>

<!-- MENU OVERLAYS -->
<div id="overlay1" class="overlay-container" style="background-color: <%=@photo['color']%>">
  <div class="closebtn" onclick="closeOverlay1()">&times;</div>
  <div class="overlay-about">
    <p>'Feeln' is your go-to content generator app based...you guessed it! Your current mood!<br>
        Select an emoji and watch the magic to happen!
    </p>
  </div>
</div>

<div id="overlay2" class="overlay-container" style="background-color: <%=@photo['color']%>">
  <div class="closebtn" onclick="closeOverlay2()">&times;</div>
  <div class="overlay-signup">
    <%= form_for @user, remote:true do |f| %>
      <h2>Signup</h2>
      <%= f.email_field :email, placeholder: "Email (e.g. example@hotmail.com)" %><br>
      <%= f.text_field :username, placeholder: "Username" %><br>
      <%= f.text_field :first_name, placeholder: "First Name" %><br>
      <%= f.text_field :last_name, placeholder: "Last Name" %><br>
      <%= f.password_field :password, placeholder: "Password (min. 8 characters)" %><br>
      <%= f.submit("Create", {:class => 'createBtn'}) %>
    <% end %>
  </div>
</div>

<!-- RESULTS HEADER & MOOD ELEMENTS -->
<div class="header">
  <h1>The Mood Is: <%= image_tag("emojis/#{@mood}") %></h1>
</div>

<%= render 'shared/poem' %>
<%= render 'shared/music' %>
<%= render 'shared/event' %>

<% if session[:id] %>
  <%= form_for @entry, url: new_entry_path, remote: true, html: {class: "entry_form"} do |f| %>
    <%= f.hidden_field :journal_id, value: User.find(session[:id]).journal.id %>
    <%= f.hidden_field :mood, value: @mood %>
    <%= f.hidden_field :photo, value: @photo['id'] %>
    <%= f.hidden_field :poem, value: @poem['title'] %>
    <%= f.hidden_field :event, value: @event['groups'][0]['items'][0]['venue']['id'] %>
    <%= f.text_area :content, placeholder: "What are you Feelng?" %>
    <%= f.submit :"Save this Mood" %>
  <% end %>
<% end %>

<!-- SPOTIFY CONTROLLERS -->
<div class="player">
  <button id="prev">Previous</button>
  <button id="play">Play/Pause</button>
  <button id="next">Next</button>
  <p id="track_name">Track Name:</p>
  <p id="artist">Artist: </p>
  <p id="album">Album: </p>
</div>

<script src="https://sdk.scdn.co/spotify-player.js"></script>

<script>
  window.onSpotifyWebPlaybackSDKReady = () => {
      const token = "<%=current_spotify_user.access_token.to_s%>";
      const player = new Spotify.Player({
          name: "Feelng's Player",
          getOauthToken: cb => { cb(token); }
      });

      player.addListener('initialization_error', ({ message }) => { console.error(message); });
        player.addListener('authentication_error', ({ message }) => { console.error(message); });
        player.addListener('account_error', ({ message }) => { console.error(message); });
        player.addListener('playback_error', ({ message }) => { console.error(message); });

        // Playback status updates
        player.addListener('player_state_changed', state => { console.log(state); });

        player.addListener('player_state_changed', ({
            track_window: {current_track}
        }) => {
            document.getElementById("track_name").innerHTML = "Track Name " + current_track.name;
            document.getElementById("artist").innerHTML = "Artist: " + current_track.artists[0].name;
            document.getElementById("album").innerHTML = "Album: " + current_track.album.name;
        });

        // Ready
        player.addListener('ready', ({ device_id }) => {
          console.log('Ready with Device ID', device_id);
        });

        // Not Ready
        player.addListener('not_ready', ({ device_id }) => {
          console.log('Device ID has gone offline', device_id);
        });



        document.getElementById("prev").addEventListener("click", function() {
            player.pause().then(() => console.log("previous track playing"))
        });
        document.getElementById("play").addEventListener("click", function() {
            player.togglePlay().then(() => console.log("Playback toggled"))
        });
        document.getElementById("next").addEventListener("click", function() {
            player.nextTrack().then(() => console.log("Next Track Playing"))
        });

        // Connect to the player!
        player.connect();



  };

  function play(device_id) {
  $.ajax({
    url: "https://api.spotify.com/v1/me/player/play?device_id=" + device_id,
    type: "PUT",
    data: '{"uris": ["spotify:track:65ES1qwOB577ZnTkizMXJJ"]}',
    beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer <%=current_spotify_user.access_token%>' );},
    success: function(data) {
        console.log(data)
    }
  });
}

</script>

<%= javascript_include_tag 'pages' %>
